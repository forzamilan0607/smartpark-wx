<style lang="less">
  page {
    padding: 20rpx;
  }
 .checkbox {
   background-color: #fff;
   display: block;
   margin-bottom: 20rpx;
   padding: 10rpx;
   font-size: 14px;
   color: #666;
 }

  .choose {
    height: 50rpx;
    line-height: 50rpx;
    font-size: 14px;
    text-align: center;
    border-radius: 10rpx;
    width: 30%;
    margin: 40rpx auto;
    display: inline-block;
    margin-left: 11%;
  }
  .approve {
    background-color: #00479D;
    color: #fff;
  }
  .reject {
    color: #fff;
    background-color: #ed4444;
  }
  .item {
    padding-left: 45rpx;
  }
</style>

<template>
  <view>
    <checkbox-group bindchange="checkboxChange">
      <label class="checkbox" wx:for="{{list}}" wx:key="{{item.nodeId}}">
        <checkbox value="{{item.nodeId}}" checked="{{item.extValue}}"/>{{item.nodeName}}

          <label class="checkbox item" wx:for="{{item.children}}" wx:key="{{item.nodeId}}">
            <checkbox value="{{item.nodeId}}" checked="{{item.extValue}}"/>{{item.nodeName}}

              <label class="checkbox item" wx:for="{{item.children}}" wx:key="{{item.nodeId}}">
                <checkbox value="{{item.nodeId}}" checked="{{item.extValue}}"/>{{item.nodeName}}
              </label>
          </label>
      </label>
    </checkbox-group>
    <view class="choose approve" catchtap="sure">确认</view>
    <view class="choose reject" catchtap="cancel">取消</view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import utilMixin from '../mixins/util'
  import toastMixin from '../mixins/toast'
  import api from '../mixins/api'

  export default class DoorList extends wepy.page {
    config = {
      navigationBarTitleText: '楼道权限',
      navigationBarBackgroundColor: '#00479D',
      navigationBarTextStyle: 'white'
    }

    mixins = [api, toastMixin, utilMixin]

    data = {
      list: [],
      doorList: [],
      start: '',
      end: '',
      id: ''
    }

    methods = {
      checkboxChange: function(e) {
        console.log(e.detail.value)
        this.doorList = e.detail.value
        this.$apply()
      },

      sure () {
        let that = this
        console.log(that.doorList)
        if (that.doorList.length === 0) {
          that.selfToast('请先选择授权楼道', 'none')
          return false
        }
        const openId = wepy.getStorageSync('openid')
        const param = {
          reservationId: that.id,
          approveReslut: 1,
          rejectReaon: '',
          openId: openId,
          doorList: that.doorList,
          actStartTime: that.start.length === 16 ? that.start + ':00:000' : that.start + ':000',
          actEndTime: that.end.length === 16 ? that.end + ':00:000' : that.end + ':000'
        }
        console.log(param, 'param')
        that.approve(param).then(res => {
          if (res.data.code === 200) {
            that.selfToast('授权成功', 'success')
            setTimeout(function() {
              wx.switchTab({
                url: './index'
              })
            }, 1000)
          }
        })
      },

      cancel () {
        wepy.navigateBack({
          delta: 1
        })
      }
    }

    onLoad (options) {
      console.log(options)
      let that = this
      that.start = options.startTime
      that.end = options.endTime
      that.id = options.id
      that.$apply()
    }

    onShow () {
      let that = this
      const openId = wepy.getStorageSync('openid')

      that.getDoorNodes(openId).then(res => {
        console.log(res)
        if (res.data.data) {
          that.list = res.data.data
          for (let i = 0; i < that.list.length; i++) {
            if (that.list[i].extValue) {
              that.doorList.push(that.list[i].nodeId)
            }
            if (that.list[i].children) {
              console.log(that.list[i].children)
              for (let j = 0; j < that.list[i].children.length; j++) {
                console.log(that.list[i].children[j].extValue)
                if (that.list[i].children[j].extValue) {
                  that.doorList.push(that.list[i].children[j].nodeId)
                }
                if (that.list[i].children[j].children) {
                  if (that.list[i].children[j].children) {
                    for (let k = 0; k < that.list[i].children[j].children.length; k++) {
                      if (that.list[i].children[j].children[k].extValue) {
                        that.doorList.push(that.list[i].children[j].children[k].nodeId)
                      }
                    }
                  }
                }
              }
            }
          }
          console.log(that.doorList)
          that.$apply()
        }
      })
      that.$apply()
    }
  }
</script>

<style lang="less">
page {
  background-color: #00479D;
  padding: 10rpx;
  width: 100%;
  box-sizing: border-box;
}
.main {
  box-sizing: border-box;
}
.module {
  border-radius: 20rpx;
  background-color: #fff;
  box-sizing: border-box;
  border-radius: 20rpx;
  margin-bottom: 20rpx;
  padding: 0 18rpx;
  .title {
    font-size: 32rpx;
    line-height: 50rpx;
    font-weight: 600;
    text-indent: .5em;
  }
}
.inputGroup {
  display: flex;
  padding: 18rpx;
/**border-bottom: 1px solid #f4f4f4;**/
  text {
    flex: 1;
    font-size: 14px;
    text-align: right;
    height: 50rpx;
    line-height: 50rpx;
  }
  .input {
    flex: 2;
    font-size: 14px;
  }
  switch {
    flex: 2;
  }
  .mobileInput {
    flex: 4;
  }
  .getCode {
    flex: 2;
    font-size: 12px;
    color: #00479D;
    border-left: 1px solid #eee;
  }
  .mobile {
    flex: 3;
  }
  .pick {
    flex: 2;
	  color: #1c5aa5;
	  border-bottom: 1px solid black;
    .picker {
      font-size: 14px;
      color: #666;
      height: 1.4rem;
      line-height: 1.4rem;
      min-height: 1.4rem;
    }
  }
}

.mark {
  position: fixed;
  z-index: 100;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  box-sizing: border-box;
  background: #000;
  opacity: .9;
  .searchView {
    z-index: 111;
    padding: 40rpx;
    width: 70%;
    border-radius: 20rpx;
    background-color: #fff;
    margin: 400rpx auto 10rpx auto;
    input {
      /**border-bottom: 1px solid #f4f4f4;**/
      width: 100%;
      font-size: 14px;
      text-align: center;
      color: #666;
    }
  }
}
.choose2 {
  background:#fff;
  height:60rpx;
  line-height:60rpx;
  font-size:16px;
  text-align:center;
  color:#00479D;
  border-radius:20rpx;
  width:50%;
  margin:30rpx auto;
  font-weight: 600;
}
.choose {
  background: #fff;
  height: 60rpx;
  line-height: 60rpx;
  font-size: 32rpx;
  text-align: center;
  color: #00479D;
  border-radius: 20rpx;
  width: 30%;
  text-align: center;
  font-weight: 600;
}
.choose1 {
  color: #ed4444;
}

.chooseGroup {
  display: flex;
  justify-content: space-around;
  margin-bottom: 20rpx;
}
.choosee {
  margin-left: auto;
  display: block;
}

.carCard {
  border: 1px solid #f4f4f4;
  margin-bottom: 10px;
}

.addButton {
  font-size: 20px;
  color: red;
  font-weight: 700;
  text-align: right;
  padding-right: 10rpx;
  flex: 3;
}
.time-picker {
	font-size: 14px;
	padding-top: 4px;
}
</style>

<template>
<view class="main">
  <view class="chooseGroup" wx:if="{{roleId == 2 && status == 1}}">
    <view class="choose" @tap="submit" >授权</view>
    <view class="choose choose1" @tap="reject" >拒绝</view>
  </view>

  <!-- 预约单信息 -->
  <view class="module">
    <view class="title">预约单信息</view>
    <view class="inputGroup">
      <text>预约单号：</text>
      <input class="input" value="{{form.reservationNo}}" disabled />
    </view>
    <view class="inputGroup">
      <text>状态：</text>
      <input class="input" value="{{statusMap[form.status]}}" disabled />
    </view>
    <view class="inputGroup" wx:if="{{form.status === '2'}}">
      <text>不通过原因：</text>
      <input class="input" value="{{form.rejectReason}}" disabled />
    </view>
  </view>
  <!-- 被访人信息 -->
  <view class="module">
    <view class="title">被访人信息</view>

    <view class="inputGroup">
      <text>被访人姓名：</text>
      <input class="input" placeholder="必填" value="{{form.staffName}}" disabled bindinput="bindInput('name')"/>
    </view>

    <view class="inputGroup" wx:if="{{status == 1}}">
      <text>来访开始时间：</text>
      <view class="pick">
        <picker class='time-picker' mode="multiSelector" bindchange="bindAppointStartTimeChange" bindtap='pickerTap'
          bindcolumnchange="bindMultiPickerColumnChange" value="{{multiIndex}}" range="{{multiArray}}">{{form.appointStartTime}}
        </picker>
      </view>
    </view>

    <view class="inputGroup" wx:if="{{status == 1}}">
      <text>来访结束时间：</text>
      <view class="pick">
        <picker class='time-picker' mode="multiSelector" bindchange="bindAppointEndTimeChange" bindtap='pickerTap' placeholder="必填"
          bindcolumnchange="bindMultiPickerColumnChange" value="{{multiIndex}}" range="{{multiArray}}">{{form.appointEndTime}}
        </picker>
      </view>
    </view>

    <view class="inputGroup" wx:if="{{status != 1}}">
      <text>来访开始时间：</text>
      <input class="input" style="font-size: 14px;" placeholder="选填" disabled value="{{form.appointStartTime}}"/>
    </view>

    <view class="inputGroup" wx:if="{{status != 1}}">
      <text>来访结束时间：</text>
      <input class="input" style="font-size: 14px;" placeholder="选填" disabled value="{{form.appointEndTime}}"/>
    </view>

    <view class="inputGroup">
      <text>来访事由：</text>
      <input class="input" placeholder="选填" disabled value="{{form.remark}}" bindinput="bindInput('remark')"/>
    </view>
  </view>

  <!-- 访客信息 -->
  <view class="module">
    <view class="title">访客信息</view>
    <view class="inputGroup">
      <text>访客姓名：</text>
      <input class="input" placeholder="必填" value="{{form.name}}" disabled bindinput="bindInput('name')"/>
    </view>

    <view class="inputGroup">
      <text>身份证：</text>
      <input class="input" placeholder="必填" value="{{form.idcardNo}}" disabled bindinput="bindInput('idcardNo')"/>
    </view>

    <view class="inputGroup">
      <text>手机号：</text>
      <input class="input" placeholder="必填" value="{{form.phone}}" disabled bindinput="bindInput('phone')"/>
    </view>

    <view class="inputGroup">
      <text>来访人数：</text>
      <input class="input" placeholder="必填" type="number" value="{{form.companions}}" disabled bindinput="bindInput('companions')"/>
    </view>
  </view>

  <!-- 车辆信息 -->
  <view class="module" wx:if="{{carCard}}">
    <view class="title">车辆信息</view>

    <view class="carCard"  wx:for="{{form.carInfoEntitys}}" wx:key="{{item.carNo}}">

    <view class="inputGroup">
      <text style="text-align: left;">车辆{{index + 1}}:</text>
    </view>

    <view class="inputGroup">
      <text>车牌号：</text>
      <input class="input" placeholder="必填" type="number" disabled  value="{{item.carNo}}" bindinput="bindInputCar('carNo')"/>
    </view>

    <view class="inputGroup">
      <text>驾驶员：</text>
      <input class="input" placeholder="必填" disabled type="number" value="{{item.name}}" bindinput="bindInputCar('name')"/>
    </view>

    <view class="inputGroup">
      <text>手机号：</text>
      <input class="input" placeholder="必填" disabled type="number" value="{{item.phone}}" bindinput="bindInputCar('phone')"/>
    </view>
  </view>
</view>



  <!-- mark -->
  <view class="mark" wx:if="{{search}}" @tap="mark">
    <view class="searchView" catchtap="catch">
      <input style="color:#1c5aa5;" value="{{ rejectReaon }}" placeholder="请输入拒绝原因" bindinput="checkMobile"/>
    </view>
    <view class="choose2" catchtap="choose">确定</view>
  </view>

  <!-- <camera wx:if="{{camera}}" device-position="back" binderror="error" style="width:80%;height:200px;position:fixed;top:100px;left:54rpx;z-index:1000;padding:10px;"></camera> -->
</view>
</template>

<script>
import wepy from 'wepy'
import utilMixin from '../mixins/util'
import toastMixin from '../mixins/toast'
import api from '../mixins/api'

export default class OrderInfo extends wepy.page {
  config = {
    navigationBarTitleText: '预约单详情',
    navigationBarBackgroundColor: '#00479D',
    navigationBarTextStyle: 'white'
  }

  mixins = [api, toastMixin, utilMixin]
  data = {
    type: '',
    roleId: '',
    status: '',
    curDate: new Date(),
    currentHours: null,
    currentMinute: null,
    rejectReaon: '', // 手机号搜索时
    search: false,
    camera: false,
    startDay: '',     // 日期选择器开始时间
    text: '发送',
    form: {
      reservationNo: '',      // 预约单号
      name: '',               // 访客姓名
      phone: '',              // 访客手机号
      staffName: '',          // 受访者姓名
      staffPhone: '',         // 受访者手机号
      verifyCode: '',         // 验证码
      isAddCarInfo: '',       // 是否添加同行车辆
      companions: '',         // 同行人数
      idcardNo: '',           // 访客身份证号码
      remark: '',             // 访客事由
      appointStartTime: '',   // 开始时间
      appointEndTime: '',     // 结束时间
      rejectReason: '',       // 审核拒绝原因
      status: '',             // 状态
      visitorIdcardEntity: {         // 访客身份信息表
        address: '',                 // 访客身份信息表
        effDate: '',                 // 证件生效时间
        expDate: '',                 // 证件失效时间
        id: '',                      // 身份信息表id
        idcardNo: '',                // 身份证号
        idcardPhotoUrl: '',          // 身份证照片地址
        issuOrganization: '',        // 签发机关
        name: '',                    // 姓名
        sex: '',                     // 性别 1 2
        visitorId: ''                // 访客id
      },
      carInfoEntitys: {              // 车辆信息集合
        carNo: '',                   // 车牌号
        name: '',                    // 驾驶员姓名
        phone: ''                    // 驾驶员手机号
      }
    },
    basestaff: {},    // 员工信息
    basetype: false,  // 判断是否展示员工信息栏
    carCard: true,    // 开关
    id: '',
    multiArray: [['今天', '明天', '3-2', '3-3', '3-4', '3-5'], [0, 1, 2, 3, 4, 5, 6], [0, 10, 20]],
    multiIndex: [0, 0, 0],
    statusMap: {
      '1': '待审核',
      '2': '审核不通过',
      '3': '审核通过',
      '4': '已完成',
      '5': '已过期'
    }
  }

  methods = {
    // input
    bindInput (val, e) {
      console.log(e, val)
      console.log(val)
      this.form[val] = e.detail.value
      this.$apply()
      console.log(this.form[val])
    },

    bindInputCar (val, e) {
      console.log(e, val)
      console.log(val)
      this.form.carInfoEntitys[val] = e.detail.value
      this.$apply()
      console.log(this.form.carInfoEntitys[val])
    },

    // 拒绝
    choose () {
      console.log('点到了')
      let that = this
      if (!that.rejectReaon) {
        that.selfToast('请输入拒绝原因', 'none')
        return false
      }
      // 调用接口
      const openId = wepy.getStorageSync('openid')
      let param = {
        reservationId: that.id,
        approveReslut: 0,
        rejectReaon: that.rejectReaon,
        openId: openId,
        doorList: [],
        actStartTime: that.form.appointStartTime.length === 16 ? that.form.appointStartTime + ':00:000' : that.form.appointStartTime + ':000',
        actEndTime: that.form.appointEndTime.length === 16 ? that.form.appointEndTime + ':00:000' : that.form.appointEndTime + ':000'
      }
      console.log(param, 'param')
      that.approve(param).then(res => {
        that.search = false
        // 跳转到首页
        setTimeout(wx.switchTab({
          url: './index'
        }), 1000)
      })
      that.$apply()
    },

    // 提交
    submit () {
      let that = this
      // 校验时间
      // 校验时间
      let appointStartTime = new Date(that.form.appointStartTime).getTime()
      let appointEndTime = new Date(that.form.appointEndTime).getTime()
      if (appointStartTime > appointEndTime) {
        that.selfToast('结束时间必须大于开始时间', 'none')
        return false
      }
      that.$navigate({
        url: `./doorList?id=${that.id}&startTime=${that.form.appointStartTime}&endTime=${that.form.appointEndTime}`
      })
    },

    // photo
    photo () {
      let that = this
      that.camera = true
      that.$apply()
      const CameraContext = wx.createCameraContext()
      CameraContext.takePhoto({
        quality: 'high',
        success: res => {
          console.log(res)
        }
      })
    },

    // chooseDate
    bindDateChange (e) {
      console.log('picker发送选择改变，携带值为', e.detail.value)
      this.form.appointStartTime = e.detail.value
      this.$apply()
    },

    // chooseDate
    bindEndDateChange (e) {
      console.log('picker发送选择改变，携带值为', e.detail.value)
      this.form.appointEndTime = e.detail.value
      this.$apply()
    },

    checkMobile (e) {
      let that = this
      console.log(e.detail.value.length)
      that.rejectReaon = e.detail.value
      that.$apply()
    },

    // focus
    bindfocus (e) {
      this.search = true
      this.$apply()
    },

    // tap mark
    mark () {
      this.search = false
      this.$apply()
    },

    // default tap
    catch () {
      console.log('阻止事件冒泡')
    },

    // switchChange
    switchChange (e) {
      console.log('switch1 发生 change 事件，携带值为', e.detail.value)
      this.carCard = e.detail.value
      this.$apply()
    },

    // 拒绝
    reject () {
      let that = this
      that.search = true
      that.$apply()
    }
  }
  onLoad (options) {
    console.log(options, 'options')
    this.id = options.id
    this.status = options.status
    this.type = options.type || false
    if (options.title) {
      wepy.setNavigationBarTitle({
        title: '预约单审批'
      })
    }
    this.$apply()
  }

  onShow () {
    const date = new Date()
    const year = date.getFullYear()
    const month = date.getMonth() + 1
    const day = date.getDate()
    this.roleId = wepy.getStorageSync('roleId')
    console.log(year)
    console.log(month)
    console.log(day)
    // this.startDay = `${year}-${month}-${day}`

    this.getVisitorInfo(this.id).then(data => {
      console.log(data)
      this.form = data.data.data
      this.carCard = this.form.carInfoEntitys.length > 0
      this.$apply()
      console.log(this.form, 'form')
    })
  }

  pickerTap () {
    const date = new Date()

    var monthDay = ['今天', '明天']
    var hours = []
    var minute = []

    this.currentHours = date.getHours()
    this.currentMinute = date.getMinutes()

    // 月-日
    for (let i = 2; i <= 28; i++) {
      var date1 = new Date(date)
      date1.setDate(date.getDate() + i)
      var md = (date1.getMonth() + 1) + '-' + date1.getDate()
      monthDay.push(md)
    }

    var data = {
      multiArray: this.data.multiArray,
      multiIndex: this.data.multiIndex
    }

    if (data.multiIndex[0] === 0) {
      if (data.multiIndex[1] === 0) {
        this.loadData(hours, minute)
      } else {
        this.loadMinute(hours, minute)
      }
    } else {
      this.loadHoursMinute(hours, minute)
    }

    data.multiArray[0] = monthDay
    data.multiArray[1] = hours
    data.multiArray[2] = minute

    this.setData(data)
    this.data = data
    this.$apply()
  }

  bindMultiPickerColumnChange (e) {
    const date = new Date()
    var that = this
    // let monthDay = ['今天', '明天']
    var hours = []
    var minute = []

    this.currentHours = date.getHours()
    this.currentMinute = date.getMinutes()

    var data = {
      multiArray: this.data.multiArray,
      multiIndex: this.data.multiIndex
    }
    // 把选择的对应值赋值给 multiIndex
    data.multiIndex[e.detail.column] = e.detail.value

    // 然后再判断当前改变的是哪一列,如果是第1列改变
    if (e.detail.column === 0) {
      // 如果第一列滚动到第一行
      if (e.detail.value === 0) {
        that.loadData(hours, minute)
      } else {
        that.loadHoursMinute(hours, minute)
      }

      data.multiIndex[1] = 0
      data.multiIndex[2] = 0

      // 如果是第2列改变
    } else if (e.detail.column === 1) {
      // 如果第一列为今天
      if (data.multiIndex[0] === 0) {
        if (e.detail.value === 0) {
          that.loadData(hours, minute)
        } else {
          that.loadMinute(hours, minute)
        }
        // 第一列不为今天
      } else {
        that.loadHoursMinute(hours, minute)
      }
      data.multiIndex[2] = 0

      // 如果是第3列改变
    } else {
      // 如果第一列为'今天'
      if (data.multiIndex[0] === 0) {
        // 如果第一列为 '今天'并且第二列为当前时间
        if (data.multiIndex[1] === 0) {
          that.loadData(hours, minute)
        } else {
          that.loadMinute(hours, minute)
        }
      } else {
        that.loadHoursMinute(hours, minute)
      }
    }
    data.multiArray[1] = hours
    data.multiArray[2] = minute
    this.setData(data)
    this.data = data
    this.$apply()
  }

  loadData (hours, minute) {
    var minuteIndex
    if (this.currentMinute > 0 && this.currentMinute <= 10) {
      minuteIndex = 10
    } else if (this.currentMinute > 10 && this.currentMinute <= 20) {
      minuteIndex = 20
    } else if (this.currentMinute > 20 && this.currentMinute <= 30) {
      minuteIndex = 30
    } else if (this.currentMinute > 30 && this.currentMinute <= 40) {
      minuteIndex = 40
    } else if (this.currentMinute > 40 && this.currentMinute <= 50) {
      minuteIndex = 50
    } else {
      minuteIndex = 60
    }

    if (minuteIndex === 60) {
      // 时
      for (let i = this.currentHours + 1; i < 24; i++) {
        hours.push(i)
      }
      // 分
      for (let i = 0; i < 60; i += 10) {
        minute.push(i)
      }
    } else {
      // 时
      for (let i = this.currentHours; i < 24; i++) {
        hours.push(i)
      }
      // 分
      for (let i = minuteIndex; i < 60; i += 10) {
        minute.push(i)
      }
    }
  }

  loadHoursMinute (hours, minute) {
    // 时
    for (let i = 0; i < 24; i++) {
      hours.push(i)
    }
    // 分
    for (let i = 0; i < 60; i += 10) {
      minute.push(i)
    }
  }

  loadMinute (hours, minute) {
    var minuteIndex
    if (this.currentMinute > 0 && this.currentMinute <= 10) {
      minuteIndex = 10
    } else if (this.currentMinute > 10 && this.currentMinute <= 20) {
      minuteIndex = 20
    } else if (this.currentMinute > 20 && this.currentMinute <= 30) {
      minuteIndex = 30
    } else if (this.currentMinute > 30 && this.currentMinute <= 40) {
      minuteIndex = 40
    } else if (this.currentMinute > 40 && this.currentMinute <= 50) {
      minuteIndex = 50
    } else {
      minuteIndex = 60
    }

    if (minuteIndex === 60) {
      // 时
      for (let i = this.currentHours + 1; i < 24; i++) {
        hours.push(i)
      }
    } else {
      // 时
      for (let i = this.currentHours; i < 24; i++) {
        hours.push(i)
      }
    }
    // 分
    for (let i = 0; i < 60; i += 10) {
      minute.push(i)
    }
  }

  convertTime (time) {
    return time < 10 ? '0' + time : time
  }

  bindAppointStartTimeChange (e) {
    this.bindStartMultiPickerChange('appointStartTime', e)
  }

  bindAppointEndTimeChange (e) {
    this.bindStartMultiPickerChange('appointEndTime', e)
  }

  bindStartMultiPickerChange (val, e) {
    let date = new Date()
    let that = this
    let monthDay = that.data.multiArray[0][e.detail.value[0]]
    let hours = that.data.multiArray[1][e.detail.value[1]]
    let minute = that.data.multiArray[2][e.detail.value[2]]

    if (monthDay === '今天') {
      var month = date.getMonth() + 1
      var day = date.getDate()
      monthDay = that.convertTime(month) + '-' + that.convertTime(day)
    } else if (monthDay === '明天') {
      let date1 = new Date(date)
      date1.setDate(date.getDate() + 1)
      monthDay = that.convertTime((date1.getMonth() + 1)) + '-' + that.convertTime(date1.getDate())
    } else {
      let month = monthDay.split('-')[0] // 返回月
      let day = monthDay.split('-')[1] // 返回日
      monthDay = that.convertTime(month) + '-' + that.convertTime(day)
    }
    let startDate = date.getFullYear() + '-' + monthDay + ' ' + that.convertTime(hours) + ':' + that.convertTime(minute)
    this.form[val] = startDate
  }
}
</script>
